services:
    app.menu_builder:
        class: AppBundle\Menu\MenuBuilder
        arguments: ["@knp_menu.factory"]

    app.menu.about:
        class: Knp\Menu\MenuItem # the service definition requires setting the class
        factory_service: app.menu_builder
        factory_method: aboutMenu
        arguments: ["@request"]
        scope: request # needed as we have the request as a dependency here
        tags:
            - { name: knp_menu.menu, alias: about } # The alias is what is used to retrieve the menu

    app.menu.automation:
        class: Knp\Menu\MenuItem # the service definition requires setting the class
        factory_service: app.menu_builder
        factory_method: automationMenu
        arguments: ["@request"]
        scope: request # needed as we have the request as a dependency here
        tags:
            - { name: knp_menu.menu, alias: automation } # The alias is what is used to retrieve the menu

    app.menu.it:
        class: Knp\Menu\MenuItem # the service definition requires setting the class
        factory_service: app.menu_builder
        factory_method: itMenu
        arguments: ["@request"]
        scope: request # needed as we have the request as a dependency here
        tags:
            - { name: knp_menu.menu, alias: it } # The alias is what is used to retrieve the menu

    app.menu.contact:
        class: Knp\Menu\MenuItem # the service definition requires setting the class
        factory_service: app.menu_builder
        factory_method: contactMenu
        arguments: ["@request"]
        scope: request # needed as we have the request as a dependency here
        tags:
            - { name: knp_menu.menu, alias: contact } # The alias is what is used to retrieve the menu

    app.menu.user:
        class: Knp\Menu\MenuItem
        factory_service: app.menu_builder
        factory_method: userMenu
        arguments: ["@request"]
        scope: request
        tags:
            - { name: knp_menu.menu, alias: user } 